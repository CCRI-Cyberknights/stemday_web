📁 ctf-hub/
├── index.html           # Main CTF Hub page (challenge list + progress tracker)
├── style.css            # Basic styles for the interface
├── script.js            # Handles progress tracking (localStorage) and button actions
├── challenges/
│   ├── challenge1/      # Example challenge folder
│   │   ├── README.txt
│   │   ├── helper.sh
│   │   ├── files/...
│   ├── challenge2/
│   │   ├── README.txt
│   │   ├── helper.sh
│   │   ├── files/...
│   └── ...
├── assets/
│   ├── icon.png         # Optional: Icons for challenges
│   └── banner.jpg       # Optional: Banner for top of page
└── server.py            # (Optional) Local Python server to launch the hub

-----------------------------------
🌟 How It Works

1️⃣ The user runs `python3 -m http.server 8000` or `./server.py` in the ctf-hub folder.

2️⃣ They open `http://localhost:8000` in their browser.

3️⃣ The hub shows:
    - A list of all challenges with status (✅ solved / 🔓 unsolved).
    - Buttons for each challenge:
        • "View Details" – Opens challenge description (README content)
        • "Open Folder" – Opens challenge folder (via browser download or xdg-open equivalent)
        • "Launch Helper" – Runs the helper.sh script (requires some shell integration)

4️⃣ Progress is tracked using localStorage (JS) so the browser remembers what they solved.

5️⃣ You and your club can expand it later to support:
    ✅ Uploading flags for validation
    ✅ Auto-marking challenges complete
    ✅ Leaderboard for multi-player sessions

-----------------------------------
📄 index.html (simplified)

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>CCRI Capture the Flag Hub</title>
  <link rel="stylesheet" href="style.css">
  <script defer src="script.js"></script>
</head>
<body>
  <header>
    <h1>🚩 CCRI Capture the Flag</h1>
    <p>Welcome to your CTF training ground. Pick a challenge below to begin.</p>
  </header>
  <main>
    <div id="challenges">
      <!-- Challenges will be populated by script.js -->
    </div>
  </main>
</body>
</html>

-----------------------------------
📄 script.js (simplified)

const challenges = [
  { id: 1, name: "QR Explorer", folder: "challenges/challenge1" },
  { id: 2, name: "HTTP Headers Mystery", folder: "challenges/challenge2" },
  { id: 3, name: "Subdomain Sweep", folder: "challenges/challenge3" }
];

function renderChallenges() {
  const container = document.getElementById("challenges");
  challenges.forEach(challenge => {
    const solved = localStorage.getItem(`challenge_${challenge.id}`) === "solved";
    const div = document.createElement("div");
    div.className = "challenge " + (solved ? "solved" : "");
    div.innerHTML = `
      <h2>${solved ? "✅" : "🔓"} ${challenge.name}</h2>
      <button onclick="openFolder('${challenge.folder}')">Open Folder</button>
      <button onclick="markSolved(${challenge.id})">Mark Solved</button>
    `;
    container.appendChild(div);
  });
}

function openFolder(path) {
  window.open(path);
}

function markSolved(id) {
  localStorage.setItem(`challenge_${id}`, "solved");
  location.reload();
}

window.onload = renderChallenges;

-----------------------------------
📄 style.css (simplified)

body {
  font-family: sans-serif;
  background: #f9f9f9;
  margin: 0;
  padding: 0;
}

header {
  background: #333;
  color: #fff;
  padding: 20px;
  text-align: center;
}

.challenge {
  background: #fff;
  margin: 10px auto;
  padding: 15px;
  border: 1px solid #ccc;
  max-width: 600px;
}

.challenge.solved {
  border-left: 5px solid green;
}

button {
  margin-right: 10px;
}

-----------------------------------
🛠 How To Use

1️⃣ Clone into your GitHub main folder.  
2️⃣ Place each challenge in `challenges/challenge#` folder.  
3️⃣ Run locally with `python3 -m http.server 8000`.  
4️⃣ Access at `http://localhost:8000` in browser.  
5️⃣ Use as a launchpad for challenges and tracking progress.
